# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- '*'
# - master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  nuGetToolVersion: '6.1.0'

steps:
## Add this Command to Include the .NET 6 SDK
#- task: UseDotNet@2
#  displayName: Use .NET 6.0
#  inputs:
#    packageType: 'sdk'
#    version: '6.0.x'

# Important! By default Azure pipelines run old version of Nuget Tool (4.1.0) https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/package/nuget?view=azure-devops
# Get the latest Nuget Tool: https://dist.nuget.org/tools.json
# It fixes this issue: https://docs.microsoft.com/en-us/dotnet/core/tools/sdk-errors/netsdk1005
- task: NuGetToolInstaller@1
  displayName: 'Install Nuget - $(nuGetToolVersion)'
  inputs:
    versionSpec: '$(nuGetToolVersion)'

- task: NuGetCommand@2
  displayName: 'Restore Nuget Packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'

#- task: MSBuild@1
#  displayName: 'Build the project - $(buildConfiguration)'
#  inputs:
#    solution: '**/*.sln'
#    configuration: $(buildConfiguration)
#    logProjectEvents: true

- task: VSBuild@1
  displayName: 'Build the project - $(buildConfiguration)'
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/nodeReuse:false'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Run Unit Tests
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

# Copy all the nupkg files created to the artifact directory
- task: CopyFiles@2
  displayName: 'Copy nupkg to StagingDirectory - $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**\*.nupkg'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifacts to drop location'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
   